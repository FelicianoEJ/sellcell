package com.test.sellcell.controllers;

import java.util.Optional;

import com.test.sellcell.models.Cellphone;
import com.test.sellcell.services.CellphoneService;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RequestMapping("api/v1/cellphones")
@RestController
public class CellphoneController {
    // This means to get the bean called CellphoneService
    // Which is auto-generated by Spring, we will use it to handle the data
    private final CellphoneService cellphoneService;

    @Autowired
    public CellphoneController(CellphoneService cellphoneService) {
        this.cellphoneService = cellphoneService;
    }

    @PostMapping
    public void addCellphone(@RequestBody Cellphone cellphone) {
        cellphoneService.addCellphone(cellphone);
    }

    @DeleteMapping("/{id}")
    public ResponseEntity<?> deleteCellphoneById(@PathVariable String id) {
        if(cellphoneService.deleteById(id)) {
            return ResponseEntity.ok().build();
        }
        else {
            return ResponseEntity.badRequest().build();
            // Or body("Id does note exist.") could be used
        }
    }

    @GetMapping("/{id}")
    public ResponseEntity<Cellphone> getCellphone(@PathVariable String id) {
        Optional<Cellphone> cellphone = cellphoneService.getCellphoneById(id);
        if (cellphone.isPresent()) {
            return ResponseEntity.ok(cellphone.get());
        } else {
            return ResponseEntity.notFound().build();
        }
    }

    @GetMapping
    public Iterable<Cellphone> getAllCellphones() {
        return cellphoneService.getAllCellphones();
    }

}
